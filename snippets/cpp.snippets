snippet package "h-package" b
/*=============================================================================
   ${1:ProjectOrCompany}
   (c) `date +%Y` $1

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

@brief `!p snip.rv = snip.basename`.

@code{.c}
  // `!p snip.rv = snip.basename`.h basic package usage

  #include "`!p snip.rv = snip.basename`.h"
  $0
@endcode

==============================================================================*/
endsnippet

# Include guard based on filename
# Trigger: guard
snippet guard "Include guard for header file" b
#ifndef ${1:`!p
import re
import os # Import the os module

# Get the full path of the current buffer using snip.fn
# snip.fn is often the simplest way to get the current filename in Ultisnips
full_path = snip.fn
# Extract just the filename from the path
filename = os.path.basename(full_path)

# Convert to uppercase, replace non-alphanumeric (except underscore) with underscore
# and ensure it starts with a letter or underscore (common C macro rule)
define_name = re.sub(r'[^a-zA-Z0-9_]', '_', filename).upper()
# Ensure it doesn't start with a digit (macros can't start with digits)
if re.match(r'^[0-9]', define_name):
    define_name = '_' + define_name
# Add a common suffix like _H or _H_
# define_name += '_H_'
snip.rv = define_name
`}
#define $1

$0

#endif /* $1 */
endsnippet
